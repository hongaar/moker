import { isPromise } from './utils.js';
export function autocompleter(program) {
    return new Autocompleter(program);
}
export class Autocompleter {
    constructor(program) {
        this.program = program;
    }
    completions(argv) {
        return this.yargsCompletions(argv);
    }
    yargsCompletions(argv) {
        return new Promise((resolve, reject) => {
            // We need to override 'strip-dashed' to make sure yargs can find the
            // '--get-yargs-completions' option.
            const yargs = this.program.createYargsInstance({ 'strip-dashed': false });
            // yargs.getCompletion() doesn't work for our use case.
            yargs.parse(['$0', '--get-yargs-completions', '$0', ...argv], {}, (err, argv, output) => {
                // We don't use yargs 17 promise style argv
                if (isPromise(argv)) {
                    throw new Error('argv is of unexpected type');
                }
                if (argv.getYargsCompletions) {
                    resolve(output ? output.split('\n') : []);
                }
            });
        });
    }
}
