"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Autocompleter = exports.autocompleter = void 0;

const utils_js_1 = require("./utils.cjs");

function autocompleter(program) {
  return new Autocompleter(program);
}

exports.autocompleter = autocompleter;

class Autocompleter {
  constructor(program) {
    this.program = program;
  }

  completions(argv) {
    return this.yargsCompletions(argv);
  }

  yargsCompletions(argv) {
    return new Promise((resolve, reject) => {
      // We need to override 'strip-dashed' to make sure yargs can find the
      // '--get-yargs-completions' option.
      const yargs = this.program.createYargsInstance({
        'strip-dashed': false
      }); // yargs.getCompletion() doesn't work for our use case.

      yargs.parse(['$0', '--get-yargs-completions', '$0', ...argv], {}, (err, argv, output) => {
        // We don't use yargs 17 promise style argv
        if ((0, utils_js_1.isPromise)(argv)) {
          throw new Error('argv is of unexpected type');
        }

        if (argv.getYargsCompletions) {
          resolve(output ? output.split('\n') : []);
        }
      });
    });
  }

}

exports.Autocompleter = Autocompleter;
//# sourceMappingURL=autocompleter.cjs.map
